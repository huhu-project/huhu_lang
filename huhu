#!/usr/bin/env python3
#-*- coding:utf-8 -*-

import sys
import os

exec_scope = {}


def _equal(command):
    variable = command.replace(' =', '=').replace('= ', '=').split('=')
    if len(variable) > 0:
        exec_scope[variable[0].strip()] = variable[1].strip()
    else:
        return {'error': 101}


def _write(command):
    variable_name = command.split('yaz')[1].strip()
    if variable_name in exec_scope:
        return exec_scope[variable_name]
    else:
        return {'error': 101}


def _plus(command):
    """ iki ve daha fazla sayıda integer toplanmak üzere gelirse
        ögeler ile klasik toplama işlemi yapılıp geri döndürülür.
        ögelerden biri string ise toplama mantığından çıkılıp
        tüm öğeler string olarak değerlendirilir, birleştirilir
        ve geri döndürülür.
    """
    params = command.replace(' +', '+').replace('+ ', '+').split('+')
    all_integer = True
    for param in params:
        if not isinstance(param, int):
            all_integer = False
    if all_integer:
        to_run = params[0]
        for param in params[1:]:
            to_run = to_run + "+" + param
        return eval(to_run)
    else:
        to_run = params[0]
        for param in params[1:]:
            to_run = to_run + param
        return to_run


def read(line):
    if "=" in line:
        _equal(line)
    if "+" in line:
        print(_plus(line))
    elif line[:3] == 'yaz':
        write = _write(line)
        if not 'error' in write:
            return write
    else:
        return line


def parser(source):
    return [read(line) for line in source.split("\n") if line != '']


def huhu():
    if "huhu" in sys.argv:
        sys.argv.remove('huhu')
    if len(sys.argv[1:]) > 0:
        for i in range(len(sys.argv[1:])):
            if sys.argv[1:][i][0] == "/":
                file_path = sys.argv[1:][i]
            else:
                file_path = "%s/%s" % (os.getcwd(), sys.argv[1:][i])
            if not file_path[-5:] == '.huhu':
                print("dosya uzantısı .huhu olmalıdır")
                break
            try:
                source = open(file_path).read()
            except:
                print("dosyayı bulamadım")
                break
            for result in parser(source):
                if isinstance(result, str):
                    print(result)
    else:
        print("huhu!")
        while True:
            command = input('>>> ')
            if command.strip() == "çık":
                print("güle güle :)")
                break
            if isinstance(command, str):
                result = read(command)
                if result:
                    print(result)

if __name__ == "__main__":
    huhu()
